# Autogenerated from /home/muke/Programming/PND-Loads/llvm-18/llvm/test/lit.site.cfg.py.in
# Do not edit!

# Allow generated file to be relocatable.
import os
import platform
def path(p):
    if not p: return ''
    # Follows lit.util.abs_path_preserve_drive, which cannot be imported here.
    if platform.system() == 'Windows':
        return os.path.abspath(os.path.join(os.path.dirname(__file__), p))
    else:
        return os.path.realpath(os.path.join(os.path.dirname(__file__), p))


import sys

config.host_triple = "x86_64-unknown-linux-gnu"
config.target_triple = ""
config.llvm_src_root = path(r"../../llvm")
config.llvm_obj_root = path(r"..")
config.llvm_tools_dir = lit_config.substitute(path(r"../bin"))
config.llvm_lib_dir = lit_config.substitute(path(r"../lib"))
config.llvm_shlib_dir = lit_config.substitute(path(r"../lib"))
config.llvm_shlib_ext = ".so"
config.llvm_plugin_ext = ".so"
config.llvm_exe_ext = ""
config.lit_tools_dir = path(r"")
config.errc_messages = "No such file or directory;Is a directory;Invalid argument;Permission denied"
config.python_executable = "/usr/bin/python3.12"
config.gold_executable = "/usr/bin/ld"
config.ld64_executable = ""
config.osx_sysroot = path(r"")
config.ocamlfind_executable = "OCAMLFIND-NOTFOUND"
config.have_ocamlopt = 0
config.ocaml_flags = ""
config.ptxas_executable = ""
config.enable_assertions = 0
config.targets_to_build = " AArch64"
config.native_target = "X86"
config.llvm_bindings = "".split(' ')
config.host_os = "Linux"
config.host_cc = "/usr/bin/cc "
config.host_cxx = "/usr/bin/c++ "
# Note: ldflags can contain double-quoted paths, so must use single quotes here.
config.host_ldflags = ''
config.llvm_use_intel_jitevents = 0
config.llvm_use_sanitizer = ""
config.have_zlib = 1
config.have_zstd = 1
config.have_libxml2 = 1
config.have_curl = 0
config.have_httplib = 0
config.have_dia_sdk = 0
config.enable_ffi = 0
config.build_examples = 0
config.enable_threads = 1
config.build_shared_libs = 0
config.link_llvm_dylib = 0
config.llvm_dylib_version = "18.1"
config.llvm_host_triple = 'x86_64-unknown-linux-gnu'
config.host_arch = "x86_64"
config.have_opt_viewer_modules = 0
config.libcxx_used = 0
config.has_plugins = 1
config.linked_bye_extension = 0
config.linked_exampleirtransforms_extension = 0
config.have_tf_aot = 0
config.have_tflite = 0
config.llvm_inliner_model_autogenerated = 0
config.llvm_raevict_model_autogenerated = 0
config.expensive_checks = 0
config.reverse_iteration = 0
config.dxil_tests = 0
config.have_llvm_driver = 0
config.spirv_tools_tests = 0

import lit.llvm
lit.llvm.initialize(lit_config, config)

# Let the main config do the real work.
lit_config.load_config(
    config, os.path.join(config.llvm_src_root, "test/lit.cfg.py"))
